# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: julionc
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: softtek-aws-lambda
# "service" is the name of this project. This will also be added to your AWS resource names.
service: softtek-aws-lambda

provider:
  name: aws
  region: us-east-1
  runtime: nodejs20.x
  stage: dev
  environment:
    CHARACTER_TABLE: Characters
    INFORMATION_TABLE: Information
    TABLE_TTL: 30 #cache
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:BatchWriteItem
          Resource:
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.CHARACTER_TABLE}
            - arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.INFORMATION_TABLE}

        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource:
            - arn:aws:logs:${self:provider.region}:*:*

functions:
  character:
    handler: src/api/get-character.handler
    events:
      - httpApi:
          path: /fusionados
          method: get
  almacenar:
    handler: src/api/post-information.handler
    events:
      - httpApi:
          path: /almacenar
          method: post          
  historial:
    handler: src/api/get-historial.handler
    events:
      - httpApi:
          path: /historial
          method: get          

resources:
  Resources:
    Characters:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Characters
        # AttributeDefinitions:
        #   - AttributeName: id
        #     AttributeType: S
        # KeySchema:
        #   - AttributeName: id
        #     KeyType: HASH
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        # ProvisionedThroughput:
        #   ReadCapacityUnits: 1
        #   WriteCapacityUnits: 1
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
    Information:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Information
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        # ProvisionedThroughput:
        #   ReadCapacityUnits: 1
        #   WriteCapacityUnits: 1

custom:
  esbuild:
    format: esm
    outputFileExtension: .mjs
    exclude:
      - "@aws-sdk/*"

build:
  esbuild:
    bundle: true
    minify: true

plugins:
  - serverless-offline